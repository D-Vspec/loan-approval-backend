"""demo

Revision ID: 6a44a9cccce1
Revises: 
Create Date: 2025-08-27 07:33:15.979732

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6a44a9cccce1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('salutation', sa.Enum('Mr', 'Ms', 'Others', name='salutationenum'), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.Enum('Male', 'Female', 'Other', name='genderenum'), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('place_of_birth', sa.String(length=150), nullable=True),
    sa.Column('height', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('contact_number', sa.String(length=20), nullable=True),
    sa.Column('no_of_dependents', sa.Integer(), nullable=True),
    sa.Column('marital_status', sa.Enum('Single', 'Married', 'Divorced', 'Widowed', 'Separated', 'Other', name='maritalstatusenum'), nullable=True),
    sa.Column('nationality', sa.String(length=100), nullable=True),
    sa.Column('weight', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('education', sa.String(length=150), nullable=True),
    sa.Column('spouse_name', sa.String(length=150), nullable=True),
    sa.Column('spouse_birthdate', sa.Date(), nullable=True),
    sa.Column('work', sa.String(length=150), nullable=True),
    sa.Column('monthly_income', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('type_of_loan', sa.String(length=150), nullable=True),
    sa.Column('loan_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', name='clientstatusenum'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loan_approver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('token_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usage_date', sa.Date(), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=False),
    sa.Column('api_endpoint', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_usage', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_usage_usage_date'), ['usage_date'], unique=False)

    op.create_table('address_information',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('barangay', sa.String(length=100), nullable=True),
    sa.Column('city_municipality', sa.String(length=150), nullable=True),
    sa.Column('province', sa.String(length=150), nullable=True),
    sa.Column('region', sa.String(length=150), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('beneficiaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('relationship', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cash_flow_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('weekly_cash_flow', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('cash_flow_category', sa.Enum('Below180', 'Exactly180', 'Above180', 'SufficientMatches', 'ExceedsInstallment', name='cashflowcategoryenum'), nullable=False),
    sa.Column('desired_weekly_installment', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('center_collection_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('collection_status', sa.Enum('WeeklyPaymentsNotCompleted', 'PaymentsIncompleteDueDateCompletedWithinWeek', 'PaymentsCompletedMoreThan2hrsLateAfterADFollowup', 'PaymentsCompletedOnTime', 'PaymentsCompletedWithinSchedulePromptly', name='collectionrecordenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('center_status_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('member_count', sa.Enum('FiveToTenMembers', 'ElevenToFifteenMembers', 'TwentySixOrMoreMembers', 'SixteenToTwentyMembers', 'TwentyOneToTwentyFiveMembers', name='centermembersenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('co_insured',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('relationship', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('Business', 'Sales', 'Household', name='incomeexpensetypeenum'), nullable=True),
    sa.Column('frequency', sa.Enum('Daily', 'Weekly', 'SemiMonthly', 'Monthly', name='frequencyenum'), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family_and_toilet_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('family_status', sa.Enum('SeparatedNewPartner', 'WidowedSeparatedAlone', 'Single', 'LivingWithPartner', 'LegallyMarried', 'Other', name='familystatusenum'), nullable=False),
    sa.Column('family_status_custom', sa.String(length=255), nullable=True),
    sa.Column('toilet_status', sa.Enum('NoPersonalToilet', 'ToiletOutsideHome', 'ToiletInsideNoWater', 'ToiletInsideWithWater', 'ToiletInsideWaterTiled', 'Other', name='toiletstatusenum'), nullable=False),
    sa.Column('toilet_status_custom', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('income',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('Business', 'Sales', 'Household', name='incomeexpensetypeenum'), nullable=True),
    sa.Column('frequency', sa.Enum('Daily', 'Weekly', 'SemiMonthly', 'Monthly', name='frequencyenum'), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lending_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('group_participation', sa.Enum('MemberOfMoreThan4Groups', 'NoExperienceWithLoanGroup', 'MemberOf3To4Groups', 'SpouseMemberOfAnotherGroup', 'MemberOf1To2Groups', name='lendinggroupsenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_attendance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('attendance_frequency', sa.Enum('AttendedOnceIn6Months', 'AttendedTwiceIn6Months', 'Attended3TimesIn6Months', 'Attended4TimesIn6Months', 'Attended5OrMoreTimesIn6Months', name='meetingattendanceenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('other_repayment_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('source_type', sa.Enum('PensionSubsidy', 'SidelineHustle', 'LandFarming', 'SpouseChildIncome', 'Remittances', 'Other', name='otherrepaymentsourceenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pastdue_ratio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('ratio_category', sa.Enum('FourPercentOrHigher', 'ThreePercent', 'TwoPercent', 'OnePercent', 'ZeroPercentNoPastDue', name='pastdueratioenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('payment_status', sa.Enum('NoWeeklyPaymentsNotCoveredByOthers', 'OneToTwoRedMarksInPassbook', 'CoveredByCenterWithinTime', 'WeeklyContributionsUpToDate', 'PersonallyPaysOnTime', name='paymenthistoryenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('primary_repayment_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('source_type', sa.Enum('Agriculture', 'InformalBusiness', 'StableOccupation', 'PermanentStall', 'RegisteredBusiness', 'Other', name='primaryrepaymentsourceenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('program_benefits_received',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('benefits_name', sa.Enum('GYRT_LIFE_INSURANCE', 'CGL_LOAN_INSURANCE', 'BYA_MEDICAL_ASSISTANCE', 'BYA_EDUCATIONAL_ASSISTANCE', 'NONE', name='programbenefitsenum'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('residency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('length_of_stay', sa.Enum('OneToTwoYears', 'ThreeToFiveYears', 'MoreThanFiveYears', 'SpouseSinceChildhood', 'ApplicantSinceChildhood', 'Other', name='lengthofstayenum'), nullable=False),
    sa.Column('length_of_stay_custom', sa.String(length=255), nullable=True),
    sa.Column('ownership_type', sa.Enum('Renting', 'Squatter', 'Tenant', 'LivingWithParents', 'OwnsHouseAndLot', 'Other', name='ownershiptypeenum'), nullable=False),
    sa.Column('ownership_type_custom', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_in_program',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('program_cycle', sa.Enum('SecondCycleOrEarlier', 'ThirdToFourthCycle', 'FifthToSixthCycle', 'SeventhToEighthCycle', 'NinthCycleAndBeyond', name='timeinprogramenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('years_in_program',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('program_duration', sa.Enum('TwoYearsOrLess', 'ThreeToFourYears', 'FiveToSixYears', 'SixToSevenYears', 'EightYearsOrMore', name='yearsinprogramenum'), nullable=False),
    sa.Column('custom_description', sa.String(length=255), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('years_in_program')
    op.drop_table('time_in_program')
    op.drop_table('residency')
    op.drop_table('program_benefits_received')
    op.drop_table('primary_repayment_source')
    op.drop_table('payment_history')
    op.drop_table('pastdue_ratio')
    op.drop_table('other_repayment_source')
    op.drop_table('meeting_attendance')
    op.drop_table('lending_groups')
    op.drop_table('income')
    op.drop_table('family_and_toilet_status')
    op.drop_table('expense')
    op.drop_table('co_insured')
    op.drop_table('center_status_members')
    op.drop_table('center_collection_record')
    op.drop_table('cash_flow_analysis')
    op.drop_table('beneficiaries')
    op.drop_table('address_information')
    with op.batch_alter_table('token_usage', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_usage_usage_date'))

    op.drop_table('token_usage')
    op.drop_table('loan_approver')
    op.drop_table('client')
    # ### end Alembic commands ###
